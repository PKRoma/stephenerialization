<project xmlns:ivy="antlib:org.apache.ivy.ant" name="Stephenerialization" default="dist" basedir="..">
	<description>Build file for building stephenerialization.</description>

	<!-- set global properties for this build -->
	<property name="src.base" location="src" />
	<property name="src.main" location="src/main" />
	<property name="src.tests" location="src/test" />
	<property name="compile.base" location="compile" />
	<property name="compile.main" location="${compile.base}/main" />
	<property name="compile.tests" location="${compile.base}/tests" />
	<property name="reports.base" location="reports" />
	<property name="reports.tests" location="${reports.base}/tests" />
	<property name="reports.html" location="${reports.base}/html" />
	<property name="dist"  location="dist" />
	<property name="dist.docs"  location="dist/docs" />
	<property name="lib" location="lib" />
	<property name="project.name" value="Stephenerialization" />
	<property name="resources" value="resources" />
	
	<target name="resolve" description="Retrieves dependencies.">
		<ivy:resolve file="build/ivy.xml"/>
		<ivy:retrieve pattern="${lib}/[conf]/[artifact]-[type]-[revision].[ext]" />
	</target>

	<target name="init">
		<tstamp/>
		<mkdir dir="${reports.base}" />
		<mkdir dir="${reports.tests}" />
		<mkdir dir="${reports.html}" />
		<mkdir dir="${compile.base}"/>
		<mkdir dir="${compile.main}"/>
		<mkdir dir="${compile.tests}"/>
		<mkdir dir="${resources}"/>
	</target>
	
	<target name="gather-resources" depends="init">
		<copy file="LICENSE" todir="${resources}"/>
		<copy file="README" todir="${resources}"/>
	</target>
	
	<target name="compile-test" depends="init, resolve, compile-main" description="compile the test source " >
		<javac srcdir="${src.tests}" destdir="${compile.tests}" includeantruntime="false">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
				<pathelement location="${compile.main}"/>
			</classpath>
		</javac>
	</target>
	
	<target name="compile-main" depends="init, resolve" description="compile the main source " >
		<javac srcdir="${src.main}" destdir="${compile.main}" includeantruntime="false">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<target name="run-tests" depends="compile-test, compile-main" description="run tests">
		<junit printsummary="yes" haltonfailure="yes">
		  <classpath>
		    <pathelement location="${compile.tests}"/>
		  	<pathelement location="${compile.main}"/>
		  	<fileset dir="${lib}">
				<include name="**/*.jar"/>
			</fileset>
		  </classpath>

		<formatter type="xml"/>

		  <batchtest fork="yes" todir="${reports.tests}">
		  	<formatter type="xml"/>
		    <fileset dir="${src.tests}">
		      <include name="**/*Test*.java"/>
		    </fileset>
		  </batchtest>
		</junit>
		
		<junitreport todir="${reports.html}">
		  <fileset dir="${reports.tests}">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports.html}"/>
		</junitreport>
		
	</target>
	
	<target name="pack-docs" depends="compile-main, compile-test" description="generate javadocs">
		<javadoc
			       packagenames="com.enragedginger.*"
			       sourcepath="${src.main}"
		           destdir="${dist.docs}"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="Stephenerialize API">
			<classpath>
				<pathelement location="${compile.tests}"/>
				<pathelement location="${compile.main}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javadoc>
		<zip basedir="${dist.docs}" includes="**" destfile="dist/${ivy.module}-${ivy.revision}-javadoc.jar"/>
		<delete dir="${dist.docs}"/>
	</target>
	
	<target name="pack-src" description="bundle sources in a jar">
	    <jar basedir="${src.base}" destfile="${dist}/${ivy.module}-${ivy.revision}-sources.jar"/>
	</target>
	
	<target name="dist" depends="run-tests, compile-main, gather-resources, pack-docs, pack-src" description="generate the distribution" >
		<ivy:info file="build/ivy.xml" />
		<mkdir dir="${dist}"/>
		<jar jarfile="${dist}/${ivy.module}-${ivy.revision}.jar" basedir="${compile.main}">
			<fileset dir="${resources}"/>
		</jar>
	</target>

	<target name="clean" description="clean up" >
		<delete dir="${reports.base}"/>
		<delete dir="${compile.base}"/>
		<delete dir="${lib}"/>
		<delete dir="${dist}"/>
	</target>
	
	<target name="make-pom-pom" description="converts the ivy.xml to a pom-pom floor tom step mom">
		<ivy:makepom ivyfile="build/ivy.xml" pomfile="build/generated.pom" >
			<mapping conf="default" scope="compile" />
			<mapping conf="default" scope="runtime" />
			<mapping conf="test" scope="test" />
		</ivy:makepom>
	</target>
</project>